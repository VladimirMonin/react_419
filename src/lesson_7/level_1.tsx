// lesson 7 level 1 - –í—Å–µ –≤ –æ–¥–Ω–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ

import React, { useState } from 'react';

export function AppLevel1() {
  const [count, setCount] = useState(0);

    return (
    <div>
        <h1>–°—á–µ—Ç—á–∏–∫: {count}</h1>
        <button onClick={() => setCount(count + 1)} style={{ backgroundColor: 'lightgreen', padding: '10px', marginRight: '10px', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>–£–≤–µ–ª–∏—á–∏—Ç—å</button>
        <button onClick={() => setCount(count - 1)} className="btn-level-1">–£–º–µ–Ω—å—à–∏—Ç—å</button>
    </div>
    );
}

// –£–ø—Ä–∞–≤–ª—è–µ–º—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç - –ø–æ–ª–µ –≤–≤–æ–¥–∞
export function ControlledInputLevel1() {
    const [inputValue, setInputValue] = useState('');

const emojiMapping = {
        // –†—É—Å—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç
        "–∞": "üçé", // –∞—Ä–±—É–∑
        "–±": "üçå", // –±–∞–Ω–∞–Ω
        "–≤": "üçá", // –≤–∏–Ω–æ–≥—Ä–∞–¥
        "–≥": "üçÑ", // –≥—Ä–∏–±
        "–¥": "üè†", // –¥–æ–º
        "–µ": "ü¶î", // —ë–∂
        "—ë": "ü¶î", // —ë–∂
        "–∂": "ü™≤", // –∂—É–∫
        "–∑": "ü¶ì", // –∑–µ–±—Ä–∞
        "–∏": "üéØ", // –∏–≥—Ä–∞
        "–π": "üß∏", // –π–æ-–π–æ
        "–∫": "üê±", // –∫–æ—Ç
        "–ª": "ü¶Å", // –ª–µ–≤
        "–º": "üê≠", // –º—ã—à—å
        "–Ω": "ü¶è", // –Ω–æ—Å–æ—Ä–æ–≥
        "–æ": "üçä", // –∞–ø–µ–ª—å—Å–∏–Ω
        "–ø": "üêß", // –ø–∏–Ω–≥–≤–∏–Ω
        "—Ä": "üêü", // —Ä—ã–±–∞
        "—Å": "üêò", // —Å–ª–æ–Ω
        "—Ç": "üêÖ", // —Ç–∏–≥—Ä
        "—É": "ü¶Ü", // —É—Ç–∫–∞
        "—Ñ": "ü¶©", // —Ñ–ª–∞–º–∏–Ω–≥–æ
        "—Ö": "üçû", // —Ö–ª–µ–±
        "—Ü": "üå∏", // —Ü–≤–µ—Ç–æ–∫
        "—á": "ü´ñ", // —á–∞–π–Ω–∏–∫
        "—à": "üß∏", // —à–∞—Ä
        "—â": "ü™•", // —â—ë—Ç–∫–∞
        "—ä": "üî§", // —Ç–≤—ë—Ä–¥—ã–π –∑–Ω–∞–∫
        "—ã": "üßÄ", // —Å—ã—Ä
        "—å": "üî§", // –º—è–≥–∫–∏–π –∑–Ω–∞–∫
        "—ç": "‚ö°", // —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ
        "—é": "üåÄ", // —é–ª–∞
        "—è": "ü•ö", // —è–π—Ü–æ
        
        // –ê–Ω–≥–ª–∏–π—Å–∫–∏–π –∞–ª—Ñ–∞–≤–∏—Ç
        "a": "üçé", // apple
        "b": "üçå", // banana
        "c": "üê±", // cat
        "d": "üêï", // dog
        "e": "üêò", // elephant
        "f": "üê∏", // frog
        "g": "üçá", // grapes
        "h": "üè†", // house
        "i": "üç¶", // ice cream
        "j": "üïπÔ∏è", // joystick
        "k": "üîë", // key
        "l": "ü¶Å", // lion
        "m": "üê≠", // mouse
        "n": "üåô", // night
        "o": "üçä", // orange
        "p": "üêß", // penguin
        "q": "üëë", // queen
        "r": "üåà", // rainbow
        "s": "‚≠ê", // star
        "t": "üêÖ", // tiger
        "u": "‚òÇÔ∏è", // umbrella
        "v": "üåã", // volcano
        "w": "üêã", // whale
        "x": "‚ùå", // x-mark
        "y": "üíõ", // yellow
        "z": "ü¶ì", // zebra
    }

    const mappedValue = inputValue.split('').map(char => emojiMapping[char.toLowerCase()] || char).join('');

    if (mappedValue !== inputValue) {
        setInputValue(mappedValue);
    }
    return (
        <div style={{ marginTop: '20px' }}>
            <input
                type="text"
                value={inputValue}
                onChange={(e) => setInputValue(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç"
                className="form-control"
            />
            <p>–í—ã –≤–≤–µ–ª–∏: {inputValue}</p>
        </div>
    );
}