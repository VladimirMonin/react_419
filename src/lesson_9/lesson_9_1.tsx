// Lesson 9 - –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –•—É–∫–æ–º useContext
// –≠—Ç–æ—Ç —Ö—É–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –¥–µ—Ä–µ–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø—Ä–æ–ø—Å—ã –Ω–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —É—Ä–æ–≤–Ω—è—Ö.
// –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã: 1. –¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è 2. –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è 3. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 4. –í–∞–ª—é—Ç–∞
// –ù–∞–ø–∏—à–µ–º —Å–µ—Ä–∏—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞


// –î–∞—Ç–∞—Å–µ—Ç. 3 —Ç–æ–≤–∞—Ä–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤–∞–ª—é—Ç–∞–º–∏

export const products = [
    {
        id: 1,
        price: [{ amount: 100, currency: 'USD' }, { amount: 6000, currency: 'RUB' }, { amount: 90, currency: 'EUR' }],
        title: "–ê–ø–µ–ª—å—Å–∏–Ω",
        text: "–°–≤–µ–∂–∏–π –∏ —Å–æ—á–Ω—ã–π –∞–ø–µ–ª—å—Å–∏–Ω, –ø–æ–ª–Ω—ã–π –≤–∏—Ç–∞–º–∏–Ω–æ–≤.",
        image: "https://images.unsplash.com/photo-1547514701-42782101795e?ixlib=rb-4.0.3&auto=format&fit=crop&w=687&q=80",
        alt: "–ê–ø–µ–ª—å—Å–∏–Ω"
    },
    {
        id: 2,
        price: [{ amount: 80, currency: 'USD' }, { amount: 4800, currency: 'RUB' }, { amount: 70, currency: 'EUR' }],
        title: "–ë–∞–Ω–∞–Ω",
        text: "–°–ø–µ–ª—ã–π –±–∞–Ω–∞–Ω, –±–æ–≥–∞—Ç—ã–π –∫–∞–ª–∏–µ–º –∏ —ç–Ω–µ—Ä–≥–∏–µ–π.",
        image: "https://images.unsplash.com/photo-1603833665858-e61d17a86224?ixlib=rb-4.0.3&auto=format&fit=crop&w=687&q=80",
        alt: "–ë–∞–Ω–∞–Ω"
    },
    {
        id: 3,
        price: [{ amount: 120, currency: 'USD' }, { amount: 7200, currency: 'RUB' }, { amount: 110, currency: 'EUR' }],
        title: "–Ø–±–ª–æ–∫–æ",
        text: "–°–≤–µ–∂–µ–µ —è–±–ª–æ–∫–æ, —Ö—Ä—É—Å—Ç—è—â–µ–µ –∏ —Å–ª–∞–¥–∫–æ–µ.",
        image: "https://images.unsplash.com/photo-1567306226416-28f0efdc88ce?ixlib=rb-4.0.3&auto=format&fit=crop&w=687&q=80",
        alt: "–Ø–±–ª–æ–∫–æ"
    }
];

// –ò–º–ø–æ—Ä—Ç —Ö—É–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
import { useContext, createContext } from 'react';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–∏–ø–∞ –≤–∞–ª—é—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
interface CurrencyContextType {
    currency: string;
    setCurrency: (currency: string) => void;
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
interface CartItemInCart {
    id: number;
    title: string;
    price: { amount: number; currency: string }[];
    quantity: number;
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∫–æ—Ä–∑–∏–Ω—ã
interface CartContextType {
    cartItems: CartItemInCart[];
    addToCart: (product: CartItem) => void;
    clearCart: () => void;
}

// –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
export const CurrencyContext = createContext<CurrencyContextType | null>(null);
export const CartContext = createContext<CartContextType | null>(null);

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–æ–≤–∞—Ä–∞
export interface CartItem {
    id: number;
    title: string;
    price: { amount: number; currency: string }[];
    image: string;
    alt: string;
    text: string;
}

// –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞
export function ProductCard({ product }: { product: CartItem }) {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–∞–ª—é—Ç—É –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const currencyContext = useContext(CurrencyContext);
    const currentCurrency = currencyContext?.currency || 'USD';
    
    // –ü–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const cartContext = useContext(CartContext);
    
    // –ù–∞—Ö–æ–¥–∏–º —Ü–µ–Ω—É –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–∞–ª—é—Ç—ã
    const currentPrice = product.price.find(p => p.currency === currentCurrency);
    
    // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
    const handleAddToCart = () => {
        if (cartContext) {
            cartContext.addToCart(product);
        }
    };
    
    return (
        <div className="card" style={{ width: '18rem', margin: '10px' }}>
            <img src={product.image} className="card-img-top" alt={product.alt} />
            <div className="card-body">
                <h5 className="card-title">{product.title}</h5>
                <p className="card-text">{product.text}</p>
                <p>–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {currentPrice?.amount} {currentCurrency}</p>
                <button className="btn btn-primary" onClick={handleAddToCart}>–í –∫–æ—Ä–∑–∏–Ω—É</button>
                
                
                {/* –í—ã–ø–∞–¥–∞—à–∫–∞ —Å–º–µ–Ω—ã –≤–∞–ª—é—Ç—ã */}
                <select value={currentCurrency} onChange={(e) => currencyContext?.setCurrency(e.target.value)}>
                    <option value="USD">USD</option>
                    <option value="EUR">EUR</option>
                    <option value="RUB">RUB</option>
                </select>
            </div>
        </div>
    );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ—Ä–∑–∏–Ω—ã
export function Cart() {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–∞–ª—é—Ç—É –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const currencyContext = useContext(CurrencyContext);
    const currentCurrency = currencyContext?.currency || 'USD';
    
    // –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const cartContext = useContext(CartContext);
    
    if (!cartContext) {
        return <div>–ö–æ—Ä–∑–∏–Ω–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞</div>;
    }
    
    const { cartItems, clearCart } = cartContext;
    
    // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
    const totalAmount = cartItems.reduce((total, item) => {
        const priceInCurrentCurrency = item.price.find(p => p.currency === currentCurrency);
        return total + (priceInCurrentCurrency?.amount || 0) * item.quantity;
    }, 0);
    
    return (
        <div style={{ 
            border: '2px solid #007bff', 
            borderRadius: '8px', 
            padding: '20px', 
            margin: '20px',
            backgroundColor: '#f8f9fa'
        }}>
            <h2>üõí –ö–æ—Ä–∑–∏–Ω–∞</h2>
            
            {cartItems.length === 0 ? (
                <p>–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
            ) : (
                <>
                    <div>
                        {cartItems.map(item => {
                            const priceInCurrentCurrency = item.price.find(p => p.currency === currentCurrency);
                            return (
                                <div key={item.id} style={{ 
                                    padding: '10px', 
                                    border: '1px solid #ddd', 
                                    borderRadius: '4px',
                                    margin: '5px 0',
                                    backgroundColor: 'white'
                                }}>
                                    <h4>{item.title}</h4>
                                    <p>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item.quantity}</p>
                                    <p>–¶–µ–Ω–∞ –∑–∞ —à—Ç—É–∫—É: {priceInCurrentCurrency?.amount} {currentCurrency}</p>
                                    <p><strong>–°—É–º–º–∞: {(priceInCurrentCurrency?.amount || 0) * item.quantity} {currentCurrency}</strong></p>
                                </div>
                            );
                        })}
                    </div>
                    
                    <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#e9ecef', borderRadius: '4px' }}>
                        <h3>–û–±—â–∞—è —Å—É–º–º–∞: {totalAmount} {currentCurrency}</h3>
                        <button 
                            className="btn btn-danger" 
                            onClick={clearCart}
                            style={{ marginTop: '10px' }}
                        >
                            –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É
                        </button>
                    </div>
                </>
            )}
        </div>
    );
}
