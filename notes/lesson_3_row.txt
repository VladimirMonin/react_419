---
// lesson_3.tsx
// –ü—Ä–∏–º–µ—Ä –æ–¥–Ω–æ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ React. –ú—ã —Ä–µ–Ω–¥–µ—Ä–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏ –æ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–æ—á–µ—Ä–Ω–∏–π –ø–µ—Ä–µ–¥–∞–µ—Ç —Ç—É–¥–∞ –¥–∞–Ω–Ω—ã–µ


// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–æ–ø—Å–∞
interface UserAvatarProps {
    src: string;
    alt: string;
}


// –î–æ—á–µ—Ä–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç props
export function UserAvatar(props: UserAvatarProps) {
    return(
        <div>
            {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ props */}
            <img src={props.src} alt={props.alt} style={{ width:100, height:100, borderRadius: "50"}} />
        </div>
    )
}

// –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–¥–∞–µ—Ç props
export function UserProfile() {
    const UserData = {
        altText: "–ê–≤–∞—Ç–∞—Ä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        avatarUrl: "https://i.pravatar.cc/150"
    }

    return(
        <div>
            <h1>–ü—Ä–æ—Ñ–∏–ª—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h1>
            {/* –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –¥–æ—á–µ—Ä–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —á–µ—Ä–µ–∑ props */}
            <UserAvatar src={UserData.avatarUrl} alt={UserData.altText}/>
        </div>
    )}
---
// –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–µ–¥–∞—á–∏ –ø—Ä–æ—Å—Ç—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö: string –∏ number
interface ProductProps {
  name: string;
  price: number;
}

export function Product({ name, price }: ProductProps) {
  return (
    <div>
      <h3>{name}</h3>
      <p>–¶–µ–Ω–∞: {price} —Ä—É–±.</p>
    </div>
  );
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
// <Product name="–ù–æ—É—Ç–±—É–∫" price={50000} />
// <Product name="–ú—ã—à—å" price={1500} />
---
// Boolean props –∏ —É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥
interface StatusIndicatorProps {
  isOnline: boolean;
}

export function StatusIndicator({ isOnline }: StatusIndicatorProps) {
  return (
    <div>
      {/* –¢–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ–∂–¥—É –¥–≤—É–º—è –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ */}
      {isOnline ? (
        <span style={{ color: 'green' }}>üü¢ –û–Ω–ª–∞–π–Ω</span>
      ) : (
        <span style={{ color: 'red' }}>üî¥ –û—Ñ—Ñ–ª–∞–π–Ω</span>
      )}
      
      {/* –õ–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä && –¥–ª—è —É—Å–ª–æ–≤–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
      {isOnline && <div style={{ fontSize: '12px', color: 'gray' }}>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω</div>}
      
      {/* –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–ø–∏—Å—å boolean props */}
      {/* <StatusIndicator isOnline /> –≤–º–µ—Å—Ç–æ <StatusIndicator isOnline={true} /> */}
    </div>
  );
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
// <StatusIndicator isOnline={true} />
// <StatusIndicator isOnline={false} />
// <StatusIndicator isOnline /> (–∫–æ—Ä–æ—Ç–∫–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è true)
---
// –†–∞–±–æ—Ç–∞ —Å –º–∞—Å—Å–∏–≤–∞–º–∏: —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–æ–≤ —Å –∫–ª—é—á–∞–º–∏
interface TagListProps {
  tags: string[];
}

export function TagList({ tags }: TagListProps) {
  return (
    <div style={{ display: 'flex', flexWrap: 'wrap', gap: '4px' }}>
      {tags.map((tag, index) => (
        <span 
          key={index} // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π id
          style={{ 
            margin: '4px', 
            padding: '4px 8px', 
            background: '#e9ecef', 
            borderRadius: '12px',
            fontSize: '12px'
          }}
        >
          #{tag}
        </span>
      ))}
    </div>
  );
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
// <TagList tags={['—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', '–∫–æ–º–µ–¥–∏—è', '–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è']} />
---
// –ü–µ—Ä–µ–¥–∞—á–∞ –æ–±—ä–µ–∫—Ç–∞ —Ü–µ–ª–∏–∫–æ–º –∫–∞–∫ prop
interface UserCardProps {
  user: {
    name: string;
    age: number;
    avatar: string;
    email: string;
  };
}

export function UserCard({ user }: UserCardProps) {
  return (
    <div style={{ 
      border: '1px solid #ccc', 
      padding: '16px', 
      borderRadius: '8px',
      maxWidth: '300px'
    }}>
      <img 
        src={user.avatar} 
        alt={user.name}
        style={{ 
          width: '50px', 
          height: '50px', 
          borderRadius: '50%',
          marginBottom: '12px'
        }}
      />
      <h3>{user.name}</h3>
      <p>–í–æ–∑—Ä–∞—Å—Ç: {user.age}</p>
      <p>Email: {user.email}</p>
    </div>
  );
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å –¥–≤–æ–π–Ω—ã–º–∏ —Ñ–∏–≥—É—Ä–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏ {{...}}:
// <UserCard user={{ name: '–ê–Ω–Ω–∞', age: 30, avatar: 'https://i.pravatar.cc/150?img=1', email: 'anna@example.com' }} />
---
// –§—É–Ω–∫—Ü–∏–∏-–∫–æ–ª–±—ç–∫–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
interface ButtonProps {
  onClick: () => void;
  children: React.ReactNode;
  variant?: 'primary' | 'secondary';
}

export function Button({ onClick, children, variant = 'primary' }: ButtonProps) {
  const buttonStyle = {
    primary: {
      background: '#007bff',
      color: 'white',
      border: 'none',
      padding: '8px 16px',
      borderRadius: '4px',
      cursor: 'pointer'
    },
    secondary: {
      background: '#6c757d',
      color: 'white',
      border: 'none',
      padding: '8px 16px',
      borderRadius: '4px',
      cursor: 'pointer'
    }
  };

  return (
    <button 
      onClick={onClick}
      style={buttonStyle[variant]}
    >
      {children}
    </button>
  );
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ:
// function ParentComponent() {
//   const handleButtonClick = () => {
//     console.log('–ö–Ω–æ–ø–∫–∞ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞!');
//   };
//
//   return (
//     <Button onClick={handleButtonClick} variant="primary">
//       –ù–∞–∂–º–∏ –º–µ–Ω—è
//     </Button>
//   );
// }
---
// –ö–æ–º–ø–æ–∑–∏—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å props.children
interface CardWrapperProps {
  children: React.ReactNode;
  title?: string;
}

export function CardWrapper({ children, title }: CardWrapperProps) {
  return (
    <div style={{
      border: '1px solid #ddd',
      borderRadius: '8px',
      padding: '16px',
      margin: '8px',
      boxShadow: '0 2px 4px rgba(0,0,0,0.1)',
      backgroundColor: 'white'
    }}>
      {title && <h3 style={{ marginTop: 0, marginBottom: '12px' }}>{title}</h3>}
      {children}
    </div>
  );
}

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
// 1. –û–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
// <CardWrapper>–ü—Ä–æ—Å—Ç–æ –∫–∞–∫–æ–π-—Ç–æ —Ç–µ–∫—Å—Ç –≤–Ω—É—Ç—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫–∏</CardWrapper>

// 2. –û–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
// <CardWrapper title="–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
//   <p>–ò–º—è: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤</p>
//   <p>Email: ivan@example.com</p>
//   <Button onClick={() => console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</Button>
// </CardWrapper>

// 3. –û–±–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
// <CardWrapper>
//   <UserCard user={{ name: '–ê–Ω–Ω–∞', age: 30, avatar: '...', email: '...' }} />
// </CardWrapper>
---
// –ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø—Ä–∏–º–µ—Ä: ProductCard —Å TypeScript
interface Product {
  id: number;
  name: string;
  price: number;
  description: string;
  image: string;
}

interface ProductCardProps {
  product: Product;
  isNew?: boolean;
  tags?: string[];
  onAddToCart: (productId: number) => void;
}

export function ProductCard({ product, isNew = false, tags = [], onAddToCart }: ProductCardProps) {
  return (
    <CardWrapper>
      {/* –ë–µ–π–¥–∂ "–ù–æ–≤–∏–Ω–∫–∞" —Å —É—Å–ª–æ–≤–Ω—ã–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º */}
      {isNew && (
        <span style={{
          background: '#28a745',
          color: 'white',
          padding: '4px 8px',
          borderRadius: '12px',
          fontSize: '12px',
          position: 'absolute',
          top: '8px',
          right: '8px'
        }}>
          –ù–æ–≤–∏–Ω–∫–∞!
        </span>
      )}
      
      {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ */}
      <img 
        src={product.image} 
        alt={product.name}
        style={{ 
          width: '100%', 
          height: '200px', 
          objectFit: 'cover',
          borderRadius: '4px',
          marginBottom: '12px'
        }}
      />
      
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ */}
      <h3 style={{ margin: '0 0 8px 0' }}>{product.name}</h3>
      <p style={{ margin: '0 0 8px 0', color: '#666' }}>{product.description}</p>
      
      {/* –¶–µ–Ω–∞ */}
      <p style={{ 
        margin: '0 0 12px 0', 
        fontSize: '18px', 
        fontWeight: 'bold',
        color: '#007bff'
      }}>
        {product.price} —Ä—É–±.
      </p>
      
      {/* –¢–µ–≥–∏ —Ç–æ–≤–∞—Ä–∞ (–º–∞—Å—Å–∏–≤) */}
      {tags.length > 0 && (
        <div style={{ display: 'flex', flexWrap: 'wrap', gap: '4px', marginBottom: '12px' }}>
          {tags.map((tag, index) => (
            <span 
              key={index}
              style={{
                background: '#e9ecef',
                padding: '2px 6px',
                borderRadius: '8px',
                fontSize: '11px'
              }}
            >
              #{tag}
            </span>
          ))}
        </div>
      )}
      
      {/* –ö–Ω–æ–ø–∫–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π-–∫–æ–ª–±—ç–∫–æ–º */}
      <Button 
        onClick={() => onAddToCart(product.id)}
        variant="primary"
        style={{ width: '100%' }}
      >
        –í –∫–æ—Ä–∑–∏–Ω—É
      </Button>
    </CardWrapper>
  );
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
 function App() {
   const handleAddToCart = (productId: number) => {
     console.log(`–¢–æ–≤–∞—Ä ${productId} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É`);
   };

   return (
     <ProductCard
       product={{
         id: 1,
         name: '–°–º–∞—Ä—Ç—Ñ–æ–Ω',
         price: 29999,
         description: '–ú–æ—â–Ω—ã–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω —Å –æ—Ç–ª–∏—á–Ω–æ–π –∫–∞–º–µ—Ä–æ–π',
         image: 'https://example.com/phone.jpg'
       }}
       isNew={true}
       tags={['—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞', '—Å–º–∞—Ä—Ç—Ñ–æ–Ω', '–Ω–æ–≤–∏–Ω–∫–∞']}
       onAddToCart={handleAddToCart}
     />
   );
 }
---